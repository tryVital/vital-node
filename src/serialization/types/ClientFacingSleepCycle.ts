/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { VitalSleepStage } from "./VitalSleepStage";
import { ClientFacingSleepCycleSourceProvider } from "./ClientFacingSleepCycleSourceProvider";
import { ClientFacingSleepCycleSourceType } from "./ClientFacingSleepCycleSourceType";
import { ClientFacingSource } from "./ClientFacingSource";

export const ClientFacingSleepCycle: core.serialization.ObjectSchema<
    serializers.ClientFacingSleepCycle.Raw,
    Vital.ClientFacingSleepCycle
> = core.serialization.object({
    id: core.serialization.string(),
    sleepId: core.serialization.property("sleep_id", core.serialization.string()),
    sessionStart: core.serialization.property("session_start", core.serialization.date()),
    sessionEnd: core.serialization.property("session_end", core.serialization.date()),
    stageStartOffsetSecond: core.serialization.property(
        "stage_start_offset_second",
        core.serialization.list(core.serialization.number())
    ),
    stageEndOffsetSecond: core.serialization.property(
        "stage_end_offset_second",
        core.serialization.list(core.serialization.number())
    ),
    stageType: core.serialization.property("stage_type", core.serialization.list(VitalSleepStage)),
    timeZone: core.serialization.property("time_zone", core.serialization.string().optional()),
    sourceProvider: core.serialization.property("source_provider", ClientFacingSleepCycleSourceProvider),
    sourceType: core.serialization.property("source_type", ClientFacingSleepCycleSourceType),
    sourceAppId: core.serialization.property("source_app_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    userId: core.serialization.property("user_id", core.serialization.string()),
    source: ClientFacingSource,
});

export declare namespace ClientFacingSleepCycle {
    interface Raw {
        id: string;
        sleep_id: string;
        session_start: string;
        session_end: string;
        stage_start_offset_second: number[];
        stage_end_offset_second: number[];
        stage_type: VitalSleepStage.Raw[];
        time_zone?: string | null;
        source_provider: ClientFacingSleepCycleSourceProvider.Raw;
        source_type: ClientFacingSleepCycleSourceType.Raw;
        source_app_id?: string | null;
        created_at: string;
        updated_at: string;
        user_id: string;
        source: ClientFacingSource.Raw;
    }
}
