/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { ClientFacingProvider } from "./ClientFacingProvider";
import { ResourceAvailability } from "./ResourceAvailability";

export const ProviderConnectionCreated: core.serialization.ObjectSchema<
    serializers.ProviderConnectionCreated.Raw,
    Vital.ProviderConnectionCreated
> = core.serialization.object({
    userId: core.serialization.property("user_id", core.serialization.string()),
    source: ClientFacingProvider,
    provider: ClientFacingProvider,
    externalUserId: core.serialization.property("external_user_id", core.serialization.string().optional()),
    resourceAvailability: core.serialization.property(
        "resource_availability",
        core.serialization.record(core.serialization.string(), ResourceAvailability)
    ),
});

export declare namespace ProviderConnectionCreated {
    interface Raw {
        user_id: string;
        source: ClientFacingProvider.Raw;
        provider: ClientFacingProvider.Raw;
        external_user_id?: string | null;
        resource_availability: Record<string, ResourceAvailability.Raw>;
    }
}
