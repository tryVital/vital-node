/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { ClientFacingDeviceSourceType } from "./ClientFacingDeviceSourceType";

export const ClientFacingDevice: core.serialization.ObjectSchema<
    serializers.ClientFacingDevice.Raw,
    Vital.ClientFacingDevice
> = core.serialization.object({
    id: core.serialization.string(),
    userId: core.serialization.property("user_id", core.serialization.string()),
    provider: core.serialization.string(),
    sourceType: core.serialization.property("source_type", ClientFacingDeviceSourceType),
    appId: core.serialization.property("app_id", core.serialization.string().optional()),
    deviceManufacturer: core.serialization.property("device_manufacturer", core.serialization.string().optional()),
    deviceModel: core.serialization.property("device_model", core.serialization.string().optional()),
    deviceVersion: core.serialization.property("device_version", core.serialization.string().optional()),
    deviceId: core.serialization.property("device_id", core.serialization.string().optional()),
});

export declare namespace ClientFacingDevice {
    interface Raw {
        id: string;
        user_id: string;
        provider: string;
        source_type: ClientFacingDeviceSourceType.Raw;
        app_id?: string | null;
        device_manufacturer?: string | null;
        device_model?: string | null;
        device_version?: string | null;
        device_id?: string | null;
    }
}
