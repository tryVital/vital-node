/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { LabTestSampleType } from "./LabTestSampleType";
import { LabTestCollectionMethod } from "./LabTestCollectionMethod";
import { LabTestStatus } from "./LabTestStatus";
import { ClientFacingLab } from "./ClientFacingLab";
import { ClientFacingMarker } from "./ClientFacingMarker";

export const ClientFacingLabTest: core.serialization.ObjectSchema<
    serializers.ClientFacingLabTest.Raw,
    Vital.ClientFacingLabTest
> = core.serialization.object({
    id: core.serialization.string(),
    slug: core.serialization.string(),
    name: core.serialization.string(),
    sampleType: core.serialization.property("sample_type", LabTestSampleType),
    method: LabTestCollectionMethod,
    price: core.serialization.number(),
    isActive: core.serialization.property("is_active", core.serialization.boolean()),
    status: LabTestStatus,
    fasting: core.serialization.boolean().optional(),
    lab: ClientFacingLab.optional(),
    markers: core.serialization.list(ClientFacingMarker).optional(),
    isDelegated: core.serialization.property("is_delegated", core.serialization.boolean().optional()),
    autoGenerated: core.serialization.property("auto_generated", core.serialization.boolean().optional()),
    hasCollectionInstructions: core.serialization.property(
        "has_collection_instructions",
        core.serialization.boolean().optional()
    ),
    commonTatDays: core.serialization.property("common_tat_days", core.serialization.number().optional()),
    worstCaseTatDays: core.serialization.property("worst_case_tat_days", core.serialization.number().optional()),
});

export declare namespace ClientFacingLabTest {
    interface Raw {
        id: string;
        slug: string;
        name: string;
        sample_type: LabTestSampleType.Raw;
        method: LabTestCollectionMethod.Raw;
        price: number;
        is_active: boolean;
        status: LabTestStatus.Raw;
        fasting?: boolean | null;
        lab?: ClientFacingLab.Raw | null;
        markers?: ClientFacingMarker.Raw[] | null;
        is_delegated?: boolean | null;
        auto_generated?: boolean | null;
        has_collection_instructions?: boolean | null;
        common_tat_days?: number | null;
        worst_case_tat_days?: number | null;
    }
}
