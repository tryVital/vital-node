/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { SampleDataDateCollected } from "./SampleDataDateCollected";
import { SampleDataDateReceived } from "./SampleDataDateReceived";
import { SampleDataDateReported } from "./SampleDataDateReported";
import { PerformingLaboratory } from "./PerformingLaboratory";
import { ClinicalInformation } from "./ClinicalInformation";

export const SampleData: core.serialization.ObjectSchema<serializers.SampleData.Raw, Vital.SampleData> =
    core.serialization.object({
        sampleId: core.serialization.property("sample_id", core.serialization.string().optional()),
        controlNumber: core.serialization.property("control_number", core.serialization.string().optional()),
        dateCollected: core.serialization.property("date_collected", SampleDataDateCollected.optional()),
        dateReceived: core.serialization.property("date_received", SampleDataDateReceived.optional()),
        dateReported: core.serialization.property("date_reported", SampleDataDateReported.optional()),
        performingLaboratories: core.serialization.property(
            "performing_laboratories",
            core.serialization.record(core.serialization.string(), PerformingLaboratory.optional()).optional()
        ),
        clinicalInformation: core.serialization.property("clinical_information", ClinicalInformation.optional()),
    });

export declare namespace SampleData {
    interface Raw {
        sample_id?: string | null;
        control_number?: string | null;
        date_collected?: SampleDataDateCollected.Raw | null;
        date_received?: SampleDataDateReceived.Raw | null;
        date_reported?: SampleDataDateReported.Raw | null;
        performing_laboratories?: Record<string, PerformingLaboratory.Raw | null | undefined> | null;
        clinical_information?: ClinicalInformation.Raw | null;
    }
}
