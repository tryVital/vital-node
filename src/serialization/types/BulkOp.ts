/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { BulkOpType } from "./BulkOpType";
import { BulkOpStatus } from "./BulkOpStatus";
import { Providers } from "./Providers";

export const BulkOp: core.serialization.ObjectSchema<serializers.BulkOp.Raw, Vital.BulkOp> = core.serialization.object({
    type: BulkOpType,
    status: BulkOpStatus,
    provider: Providers,
    pending: core.serialization.number(),
    processed: core.serialization.number(),
    startedAt: core.serialization.property("started_at", core.serialization.date()),
    endedAt: core.serialization.property("ended_at", core.serialization.date().optional()),
});

export declare namespace BulkOp {
    interface Raw {
        type: BulkOpType.Raw;
        status: BulkOpStatus.Raw;
        provider: Providers.Raw;
        pending: number;
        processed: number;
        started_at: string;
        ended_at?: string | null;
    }
}
