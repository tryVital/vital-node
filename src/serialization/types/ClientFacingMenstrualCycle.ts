/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { MenstrualFlowEntry } from "./MenstrualFlowEntry";
import { CervicalMucusEntry } from "./CervicalMucusEntry";
import { IntermenstrualBleedingEntry } from "./IntermenstrualBleedingEntry";
import { ContraceptiveEntry } from "./ContraceptiveEntry";
import { DetectedDeviationEntry } from "./DetectedDeviationEntry";
import { OvulationTestEntry } from "./OvulationTestEntry";
import { HomePregnancyTestEntry } from "./HomePregnancyTestEntry";
import { HomeProgesteroneTestEntry } from "./HomeProgesteroneTestEntry";
import { SexualActivityEntry } from "./SexualActivityEntry";
import { BasalBodyTemperatureEntry } from "./BasalBodyTemperatureEntry";
import { ClientFacingMenstrualCycleSourceProvider } from "./ClientFacingMenstrualCycleSourceProvider";
import { ClientFacingMenstrualCycleSourceType } from "./ClientFacingMenstrualCycleSourceType";
import { ClientFacingSource } from "./ClientFacingSource";

export const ClientFacingMenstrualCycle: core.serialization.ObjectSchema<
    serializers.ClientFacingMenstrualCycle.Raw,
    Vital.ClientFacingMenstrualCycle
> = core.serialization.object({
    id: core.serialization.string(),
    periodStart: core.serialization.property("period_start", core.serialization.string()),
    periodEnd: core.serialization.property("period_end", core.serialization.string().optional()),
    cycleEnd: core.serialization.property("cycle_end", core.serialization.string().optional()),
    isPredicted: core.serialization.property("is_predicted", core.serialization.boolean().optional()),
    menstrualFlow: core.serialization.property(
        "menstrual_flow",
        core.serialization.list(MenstrualFlowEntry).optional()
    ),
    cervicalMucus: core.serialization.property(
        "cervical_mucus",
        core.serialization.list(CervicalMucusEntry).optional()
    ),
    intermenstrualBleeding: core.serialization.property(
        "intermenstrual_bleeding",
        core.serialization.list(IntermenstrualBleedingEntry).optional()
    ),
    contraceptive: core.serialization.list(ContraceptiveEntry).optional(),
    detectedDeviations: core.serialization.property(
        "detected_deviations",
        core.serialization.list(DetectedDeviationEntry).optional()
    ),
    ovulationTest: core.serialization.property(
        "ovulation_test",
        core.serialization.list(OvulationTestEntry).optional()
    ),
    homePregnancyTest: core.serialization.property(
        "home_pregnancy_test",
        core.serialization.list(HomePregnancyTestEntry).optional()
    ),
    homeProgesteroneTest: core.serialization.property(
        "home_progesterone_test",
        core.serialization.list(HomeProgesteroneTestEntry).optional()
    ),
    sexualActivity: core.serialization.property(
        "sexual_activity",
        core.serialization.list(SexualActivityEntry).optional()
    ),
    basalBodyTemperature: core.serialization.property(
        "basal_body_temperature",
        core.serialization.list(BasalBodyTemperatureEntry).optional()
    ),
    sourceProvider: core.serialization.property("source_provider", ClientFacingMenstrualCycleSourceProvider),
    sourceType: core.serialization.property("source_type", ClientFacingMenstrualCycleSourceType),
    sourceAppId: core.serialization.property("source_app_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
    userId: core.serialization.property("user_id", core.serialization.string()),
    source: ClientFacingSource,
});

export declare namespace ClientFacingMenstrualCycle {
    interface Raw {
        id: string;
        period_start: string;
        period_end?: string | null;
        cycle_end?: string | null;
        is_predicted?: boolean | null;
        menstrual_flow?: MenstrualFlowEntry.Raw[] | null;
        cervical_mucus?: CervicalMucusEntry.Raw[] | null;
        intermenstrual_bleeding?: IntermenstrualBleedingEntry.Raw[] | null;
        contraceptive?: ContraceptiveEntry.Raw[] | null;
        detected_deviations?: DetectedDeviationEntry.Raw[] | null;
        ovulation_test?: OvulationTestEntry.Raw[] | null;
        home_pregnancy_test?: HomePregnancyTestEntry.Raw[] | null;
        home_progesterone_test?: HomeProgesteroneTestEntry.Raw[] | null;
        sexual_activity?: SexualActivityEntry.Raw[] | null;
        basal_body_temperature?: BasalBodyTemperatureEntry.Raw[] | null;
        source_provider: ClientFacingMenstrualCycleSourceProvider.Raw;
        source_type: ClientFacingMenstrualCycleSourceType.Raw;
        source_app_id?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
        user_id: string;
        source: ClientFacingSource.Raw;
    }
}
