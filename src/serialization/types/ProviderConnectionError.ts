/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { ProviderConnectionErrorErrorType } from "./ProviderConnectionErrorErrorType";

export const ProviderConnectionError: core.serialization.ObjectSchema<
    serializers.ProviderConnectionError.Raw,
    Vital.ProviderConnectionError
> = core.serialization.object({
    provider: core.serialization.string(),
    userId: core.serialization.property("user_id", core.serialization.string()),
    message: core.serialization.string(),
    errorType: core.serialization.property("error_type", ProviderConnectionErrorErrorType),
    errorDetails: core.serialization.property("error_details", core.serialization.string()),
});

export declare namespace ProviderConnectionError {
    interface Raw {
        provider: string;
        user_id: string;
        message: string;
        error_type: ProviderConnectionErrorErrorType.Raw;
        error_details: string;
    }
}
