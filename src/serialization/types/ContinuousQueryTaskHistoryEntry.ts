/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vital from "../../api/index";
import * as core from "../../core";
import { ContinuousQueryTaskStatus } from "./ContinuousQueryTaskStatus";

export const ContinuousQueryTaskHistoryEntry: core.serialization.ObjectSchema<
    serializers.ContinuousQueryTaskHistoryEntry.Raw,
    Vital.ContinuousQueryTaskHistoryEntry
> = core.serialization.object({
    taskerTodoId: core.serialization.property("tasker_todo_id", core.serialization.number()),
    queryId: core.serialization.property("query_id", core.serialization.string()),
    userId: core.serialization.property("user_id", core.serialization.string()),
    status: ContinuousQueryTaskStatus,
    scheduledAt: core.serialization.property("scheduled_at", core.serialization.date()),
    startedAt: core.serialization.property("started_at", core.serialization.date().optional()),
    endedAt: core.serialization.property("ended_at", core.serialization.date().optional()),
    errorDetails: core.serialization.property("error_details", core.serialization.string().optional()),
});

export declare namespace ContinuousQueryTaskHistoryEntry {
    interface Raw {
        tasker_todo_id: number;
        query_id: string;
        user_id: string;
        status: ContinuousQueryTaskStatus.Raw;
        scheduled_at: string;
        started_at?: string | null;
        ended_at?: string | null;
        error_details?: string | null;
    }
}
