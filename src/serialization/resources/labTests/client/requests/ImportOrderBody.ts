/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Vital from "../../../../../api/index";
import * as core from "../../../../../core";
import { Billing } from "../../../../types/Billing";
import { OrderSetRequest } from "../../../../types/OrderSetRequest";
import { LabTestCollectionMethod } from "../../../../types/LabTestCollectionMethod";
import { PhysicianCreateRequest } from "../../../../types/PhysicianCreateRequest";
import { PatientDetailsWithValidation } from "../../../../types/PatientDetailsWithValidation";
import { PatientAddress } from "../../../../types/PatientAddress";

export const ImportOrderBody: core.serialization.Schema<serializers.ImportOrderBody.Raw, Vital.ImportOrderBody> =
    core.serialization.object({
        userId: core.serialization.property("user_id", core.serialization.string()),
        billingType: core.serialization.property("billing_type", Billing),
        orderSet: core.serialization.property("order_set", OrderSetRequest),
        collectionMethod: core.serialization.property("collection_method", LabTestCollectionMethod),
        physician: PhysicianCreateRequest.optional(),
        patientDetails: core.serialization.property("patient_details", PatientDetailsWithValidation),
        patientAddress: core.serialization.property("patient_address", PatientAddress),
        sampleId: core.serialization.property("sample_id", core.serialization.string()),
        labAccountId: core.serialization.property("lab_account_id", core.serialization.string().optional()),
    });

export declare namespace ImportOrderBody {
    interface Raw {
        user_id: string;
        billing_type: Billing.Raw;
        order_set: OrderSetRequest.Raw;
        collection_method: LabTestCollectionMethod.Raw;
        physician?: PhysicianCreateRequest.Raw | null;
        patient_details: PatientDetailsWithValidation.Raw;
        patient_address: PatientAddress.Raw;
        sample_id: string;
        lab_account_id?: string | null;
    }
}
